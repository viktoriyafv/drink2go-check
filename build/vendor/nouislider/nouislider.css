/*! nouislider - 15.6.0 - 05/01/2022 */
/* Functional styling;
 * These styles are required for nouiSlider to function.
 * You don't need to change these rules to apply your design.
 */
.noui-target,
.noui-target * {
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-user-select: none;
  -ms-touch-action: none;
  touch-action: none;
  -ms-user-select: none;
  -moz-user-select: none;
  user-select: none;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

.noui-target {
  position: relative;
}

.noui-base,
.noui-connects {
  width: 100%;
  height: 100%;
  position: relative;
  z-index: 1;
}

/* Wrapper for all connect elements.
  */
.noui-connects {
  overflow: hidden;
  z-index: 0;
}

.noui-connect,
.noui-origin {
  will-change: transform;
  position: absolute;
  z-index: 1;
  top: 0;
  right: 0;
  height: 100%;
  width: 100%;
  -ms-transform-origin: 0 0;
  -webkit-transform-origin: 0 0;
  -webkit-transform-style: preserve-3d;
  transform-origin: 0 0;
  transform-style: flat;
}

/* Offset direction
  */
.noui-txt-dir-rtl.noui-horizontal .noui-origin {
  left: 0;
  right: auto;
}

/* Give origins 0 height/width so they don't interfere with clicking the
  * connect elements.
  */
.noui-vertical .noui-origin {
  top: -100%;
  width: 0;
}

.noui-horizontal .noui-origin {
  height: 0;
}

.noui-handle {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  position: absolute;
}

.noui-touch-area {
  height: 100%;
  width: 100%;
}

.noui-state-tap .noui-connect,
.noui-state-tap .noui-origin {
  -webkit-transition: transform 0.3s;
  transition: transform 0.3s;
}

.noui-state-drag * {
  cursor: inherit !important;
}

/* Slider size and handle placement;
  */
.noui-horizontal {
  height: 18px;
}

.noui-horizontal .noui-handle {
  width: 24px;
  height: 24px;
  bottom: 0;
  top: 0;
  margin: auto;
}

.noui-vertical {
  width: 18px;
}

.noui-vertical .noui-handle {
  width: 24px;
  height: 24px;
}

/* Styling;
  * Giving the connect element a border radius causes issues with using transform: scale
  */
.noui-target {
  width: 100%;
  height: 2px;
  position: relative;
  background-color: #e2e2e2;
}

.noui-connects {
  border-radius: 3px;
  height: 4px;
}

.noui-connect {
  background: #9070ec;
  height: 4px;

  &:disabled {
    background: #bdbdbd;
  }
}

/* Handles and cursors;
  */
.noui-draggable {
  cursor: ew-resize;
}

.noui-vertical .noui-draggable {
  cursor: ns-resize;
}

.noui-handle {
  position: absolute;
  left: 100%;
  width: 24px;
  height: 24px;
  background-color: hsl(0deg, 0%, 100%);
  border-radius: 50%;
  border: 2px solid #9070ec;
  outline: 0;
  cursor: pointer;
  padding: 0;
  z-index: 1;

  &::before {
    content: "";
    display: none;
    width: 16px;
    height: 16px;
    inset: 0;
    margin: auto;
    border-radius: 50%;
    position: absolute;
    background-color: rgba(120, 89, 207, 0.25);
    z-index: 2;
  }

  &:hover,
  &:focus,
  &:focus-visible {
    &::before {
      display: block;
    }
  }

  &:active {
    &::before {
      display: block;
      background-color: #7859cf;
    }
  }

  &:disabled {
    border: 2px solid #bdbdbd;
  }
}

.noui-handle-upper {
  transform: translate(-15px, 0);
}

.noui-active {
  box-shadow: inset 0 0 1px #FFF, inset 0 1px 7px #DDD, 0 3px 6px -3px #BBB;
}

/* Disabled state;
  */
[disabled] .noui-connect {
  background: #bdbdbd;
}

[disabled].noui-target,
[disabled].noui-handle,
[disabled] .noui-handle {
  cursor: not-allowed;
}

/* Base;
  *
  */
.noui-pips,
.noui-pips * {
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

.noui-pips {
  position: absolute;
  color: #999;
}

/* Values;
  *
  */
.noui-value {
  position: absolute;
  white-space: nowrap;
  text-align: center;
}

.noui-value-sub {
  color: #ccc;
  font-size: 10px;
}

/* Markings;
  *
  */
.noui-marker {
  position: absolute;
  background: #CCC;
}

.noui-marker-sub {
  background: #AAA;
}

.noui-marker-large {
  background: #AAA;
}

/* Horizontal layout;
  *
  */
.noui-pips-horizontal {
  padding: 10px 0;
  height: 80px;
  top: 100%;
  left: 0;
  width: 100%;
}

.noui-value-horizontal {
  -webkit-transform: translate(-50%, 50%);
  transform: translate(-50%, 50%);
}

.noui-rtl .noui-value-horizontal {
  -webkit-transform: translate(50%, 50%);
  transform: translate(50%, 50%);
}

.noui-marker-horizontal.noui-marker {
  margin-left: -1px;
  width: 2px;
  height: 5px;
}

.noui-marker-horizontal.noui-marker-sub {
  height: 10px;
}

.noui-marker-horizontal.noui-marker-large {
  height: 15px;
}

/* Vertical layout;
  *
  */
.noui-pips-vertical {
  padding: 0 10px;
  height: 100%;
  top: 0;
  left: 100%;
}

.noui-value-vertical {
  -webkit-transform: translate(0, -50%);
  transform: translate(0, -50%);
  padding-left: 25px;
}

.noui-rtl .noui-value-vertical {
  -webkit-transform: translate(0, 50%);
  transform: translate(0, 50%);
}

.noui-marker-vertical.noui-marker {
  width: 5px;
  height: 2px;
  margin-top: -1px;
}

.noui-marker-vertical.noui-marker-sub {
  width: 10px;
}

.noui-marker-vertical.noui-marker-large {
  width: 15px;
}

.noui-tooltip {
  display: block;
  position: absolute;
  border: 1px solid #D9D9D9;
  border-radius: 3px;
  background: #fff;
  color: #000;
  padding: 5px;
  text-align: center;
  white-space: nowrap;
}

.noui-horizontal .noui-tooltip {
  -webkit-transform: translate(-50%, 0);
  transform: translate(-50%, 0);
  left: 50%;
  bottom: 120%;
}

.noui-vertical .noui-tooltip {
  -webkit-transform: translate(0, -50%);
  transform: translate(0, -50%);
  top: 50%;
  right: 120%;
}

.noui-horizontal .noui-origin>.noui-tooltip {
  -webkit-transform: translate(50%, 0);
  transform: translate(50%, 0);
  left: auto;
  bottom: 10px;
}

.noui-vertical .noui-origin>.noui-tooltip {
  -webkit-transform: translate(0, -18px);
  transform: translate(0, -18px);
  top: auto;
  right: 28px;
}
